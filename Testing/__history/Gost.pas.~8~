          {**************** лндскэ ярюмдюпрмшу оюпюлерпнб пелеммшу оепедюв ***********}
UNIT  Gost;
              
INTERFACE

TYPE    TArray = array [1..75] of extended;
{*********люяяхб оюпюлерпнб йкхмнпелеммшу оепедюв***************}
{   b0    b    h    y0    A    q      l0    il_min   id_min    t     ha    hf
                                                 il_max  f                   }

Const
 ClinT: array[0..7] of string=
 ('кЧАНИ','н','ю','а','б','ц','д','е');

 UClinT: array[0..4] of string=
 ('кЧАНИ','сн','сю','са','сб');

 PClinT: array[0..3] of string=
 ('кЧАНИ','й','к','л');

 FlatT: array[0..6] of string=
 ('кЧАНИ', 'а-800', 'рю-150', 'рй-150', 'рй-200-2', 'рю-300', 'рй-300');

 FilmT: array[0..5] of string=
 ('кЧАНИ', '0.4', '0.6', '0.8', '1.0', '1.2');

 Array_kl : array[1..7 , 1..14] of real =

((8.5,  10,  6,    2.1,  47,   0.06,  1320,  9,  41, 4,  8,    12,   2.5,  7),
 (11,   13,  8,    2.8,  81,   0.10,  1700,  15, 49, 6, 10,   15,   3.3,  9),
 (14,   17,  10.5, 4,    138,  0.18,  2240,  21, 57, 8, 12.5, 19,   4.2,  11),
 (19,   22,  13.5, 4.8,  230,  0.3,   3750,  35, 66, 11, 17,   25.5, 5.7,  15),
 (27,   32,  19,   6.9,  476,  0.62,  6000,  45, 72, 14, 24,   37,   8.1,  20),
 (32,   38,  23.5, 8.3,  692,  0.9,   7100,  51, 75, 18, 29,   41.5, 9.6,  24),
 (42,   50,  30,   14,   1170, 1.52,  7100,  56, 75, 22, 38,   58,   12.5, 31));

{*********люяяхб оюпюлерпнб оепедюв сгйхл йкхмнбшл пелмел***************}
{ b0    b    h     y0    A     q      l0    il_min   id_min    t     ha    hf
                                                 il_max  f
  1     2    3     4     5     6      7      8   9   10  11    12    13    14 }
 Const Array_ukl : array[1..4 , 1..14] of real =

((8.5,  10,  8,    2.0,  56,   0.07,  1600,  17, 47, 8,  8.0,  12,   2.5,  7),
 (11,   13,  10,   2.8,  95,   0.12,  2500,  21, 51, 11, 10,   15,   3.3,  9),
 (14,   17,  13,   3.5,  158,  0.20,  3550,  29, 61, 15, 12.5, 19,   4.2,  11),
 (19,   22,  18,   4.8,  278,  0.37,  5600,  37, 61, 19, 17,   25.5,  5.7, 15));

{*********люяяхб оюпюлерпнб оепедюв онкхйкхмнбшл пелмел***************}
{ b    h     Fo    q      l0     il_min   id_min   t     z_max h2   delta
                                      il_max  f                            }
 Const Array_pkl : array[1..3 , 1..13] of real =
((2.4, 4.0,  230,   0.09,  710,   9,   37, 4,  3.5, 2.4,  36,   2.35,  1.0),
 (4.8, 9.5,  830,   0.45,  1600,  29,  49, 10, 5.6, 4.8,  50,   4.85,  2.4),
 (9.5, 16.7, 2950,  1.6,   2240,  37,  49, 17, 10,  9.5,  50,   10.35, 3.5));

{*********люяяхб оюпюлерпнб оепедюв окемнвмшл пелмел***************}
{ delta  id_min  ib_min ib_max  p0     il_min   il_max   b_max  }

  Const Array_plen : array[1..5,1..8] of real =
((0.4,   1,      1,     5,      35,    1,       31,      30),
 (0.6,   5,      1,     5,      45,    1,       31,      30),
 (0.8,   8,      6,     10,     60,    32,      49,      30),
 (1.0,   10,     6,     10,     90,    32,      49,      100),
 (1.2,   14,     6,     10,     110,   32,      49,      100));
{*******люяяхб рнкыхм окемнвмшу пелмеи***********}
Const TArrayDelta : TArray =
(0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0);

 {****************люяяхб дхюлерпнб ьйхбнб******************}
Const TArrayD : Tarray =
(28,   32,   36,   40,   45,   50,   56,   63,   71,   80,
 90,   100,  112,  125,  140,  160,  180,  200,  224,  250,
 280,  315,  355,  400,  450,  500,  560,  630,  710,  800,
 900,  1000, 1120, 1250, 1400, 1600, 1800, 2000, 0,    0,
 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 0,    0,    0,    0,    0    );

{****************люяяхб дкхм йкхмнбшу пелмеи**********************}
Const TArrayL : TArray =
(250,    260,    280,    300,    320,    340,    350,    380,    400,    420,
 450,    480,    500,    530,    560,    600,    630,    670,    710,    750,
 800,    850,    900,    950,    1000,   1060,   1120,   1180,   1250,   1320,
 1400,   1500,   1600,   1700,   1800,   1900,   2000,   2120,   2240,   2360,
 2500,   2650,   2800,   3000,   3150,   3350,   3550,   3750,   4000,   4250,
 4500,   4750,   5000,   5300,   5600,   6000,   6300,   6700,   7100,   7500,
 8000,   8500,   9000,   9500,   10000,  10600,   11200, 11800, 12500,   13200,
 14000,  15000,  16000,  17000,  18000   );

{****************люяяхб дкхм окемнвмшу пелмеи**********************}
Const TArrayLP : TArray =
(250,    260,    280,    300,    320,    340,    350,   380,    400,   420,
 450,    480,    500,    530,    560,    600,    630,   670,    710,   750,
 800,    850,    900,    950,    1000,   1060,   1120,  1180,   1250,  1320,
 1400,   1500,   1600,   1700,   1800,   1900,   2000,  2120,   2240,  2360,
 2500,   2650,   2800,   3000,   3150,   3350,   3550,  3750,   4000,  0,
 0,      0,      0,      0,      0,      0,      0,     0,      0,     0,
 0,      0,      0,      0,      0,      0,      0,     0,      0,     0,
 0,      0,      0,      0,      0 );

{****************люяяхб ьхпхмш окемнвмшу пелмеи**********************}
Const TArrayBP : TArray =
(10,  15,  20,  25,  30,  40,  50,  60,  80,  100,
 110, 0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
 0,   0,   0,   0,   0 );

Const TArrayB : TArray =
(20,   25,   32,   40,   50,   63,   71,   80,   90,  100,
112,   125,  140,  160,  180,  200,  224,  250,  280, 315,
355,   400,  450,  500,  560,  600,  650,  700,  750, 800,
900,   1000, 0,    0,    0,    0,    0,    0,    0,   0,
0,     0,    0,    0,    0,    0,    0,    0,    0,   0,
0,     0,    0,    0,    0,    0,    0,    0,    0,   0,
0,     0,    0,    0,    0,    0,    0,    0,    0,   0,
0,     0,    0,    0,    0);

Const TArrayP : TArray =
  (8.0, 9.575,  12.7, 15.875, 19.04, 25.4, 31.75, 38.1, 44.45, 50.8 ,
   0,    0,      0,     0,    0,     0,    0,     0,     0,    0,
   0,    0,      0,     0,    0,     0,    0,     0,     0,    0,
   0,    0,      0,     0,    0,     0,    0,     0,     0,    0,
   0,    0,      0,     0,    0,     0,    0,     0,     0,    0,
   0,    0,      0,     0,    0,     0,    0,     0,     0,    0,
   0,    0,      0,     0,    0,     0,    0,     0,     0,    0,
   0,    0,      0,     0,    0);

             {     лЮЯЯХБ ОЮПЮЛЕРПНБ ПНКХЙНБШУ ЖЕОЕИ  }
    Const PstR: array[1..41,1..7] of real =
                  { p        n  n_rad FПЮГП         Q     BБМ  }
                 (( 8.0,     1,  1,  4.6,   11.0,   0.2 , 3),
                  ( 9.575,   1,  1,  9.1,   28.0,   0.45, 5.72),
                  ( 12.7,    1,  1,  10.0,  16.8,   0.3 , 7.75),
                  ( 12.7,    1,  2,  9.0,   20.1,   0.35, 7.75),
                  ( 12.7,    1,  3,  18.2,  39.6,   0.65, 7.75),
                  ( 12.7,    1,  4,  18.2,  50.3,   0.75, 7.75),
                  ( 12.7,    2,  1,  31.8, 106.0,   1.4 , 7.75),
                  ( 12.7,    3,  1,  45.1, 150.0,   2.0 , 7.75),
                  ( 15.875,  1,  1,  22.7,  70.9,   0.9 , 9.65),
                  ( 15.875,  1,  2,  22.7,  54.8,   0.8 , 9.65),
                  ( 15.875,  1,  3,  22.7,  70.9,   1.0 , 9.65),
                  ( 15.875,  2,  1,  45.4, 140.0,   1.9 , 9.65),
                  ( 15.875,  3,  1,  68.1, 202.0,   2.8 , 9.65),
                  ( 19.05,   1,  1,  29.7, 105.0,   1.6 , 12.7),
                  ( 19.05,   1,  2,  31.8, 105.8,   1.9 , 12.7),
                  ( 19.05,   2,  1,  72.0, 211.0,   3.5 , 12.7),
                  ( 19.05,   2,  2,  54.0, 158.0,   2.9 , 12.7),
                  ( 19.05,   3,  1, 108.0, 317.0,   5.8 , 12.7),
                  ( 19.05,   3,  2,  96,   283.0,   4.3 , 12.7),
                  ( 19.05,   4,  1, 156.0, 408.0,   7.5 , 12.7),
                  ( 19.05,   4,  2, 128.0, 345.0,   5.75, 12.7),
                  ( 25.4,    1,  1,  50.0, 180.0,   2.6 , 15.88),
                  ( 25.4,    1,  2,  60.0, 180.0,   2.0 , 15.88),
                  ( 25.4,    2,  1, 113.4, 356.0,   5.0 , 15.88),
                  ( 25.4,    3,  1, 170.1, 532.0,   7.5 , 15.88),
                  ( 31.75,   1,  1,  70.0, 262.0,   3.8 , 19.05),
                  ( 31.75,   1,  2,  88.5, 262.0,   3.8 , 19.05),
                  ( 31.75,   2,  1, 177.0, 524.0,   7.3 , 19.05),
                  ( 31.75,   3,  1, 265.0, 786.0,  11.0 , 19.05),
                  ( 38.1,    1,  1, 100.0, 395.0,   5.5 , 25.4),
                  ( 38.1,    1,  2, 127.0, 394.0,   5.6 , 25.4),
                  ( 38.1,    2,  1, 254.0, 788.0,  11.0 , 25.4),
                  ( 38.1,    3,  1, 381.0, 1182,   16.5 , 25.4),
                  ( 44.45,   1,  1, 130,   472,     7.5 , 25.4),
                  ( 44.45,   1,  2, 172.4, 472,     7.5 , 25.4),
                  ( 44.45,   2,  1, 344,   946,    14.4 , 25.4),
                  ( 44.45,   3,  1, 517.2, 1419,   21.7 , 25.4),
                  ( 50.8,    1,  1, 160,   646,     9.7 , 31.75),
                  ( 50.8,    1,  2, 226.8, 646,     9.7 , 31.75),
                  ( 50.8,    2,  1, 453.6, 1292,   19.1 , 31.75),
                  ( 50.8,    3,  1, 650.4, 1938,   28.9 , 31.75));

              {   лЮЯЯХБ НАНГМЮВЕМХИ ПНКХЙНБШУ ЖЕОЕИ   }
            Const  TipRc:array [1..41] of string [16] =
                  ('оп-8.0-460' , 'оп-9.575-910',
                   'опк-12.7-1000-1', 'оп-12.7-900-2',
                   'оп-12.7-1820-1', 'оп-12.7-1820-2',
                   '2оп-12.7-3180', '3оп-12.7-4510',
                   'опк-15.875-2270', 'оп-15.875-2270-1',
                   'оп-15.875-2270-2', '2оп-15.875-4540',
                   '3оп-15.875-6810', 'опк-19.05-2950',
                   'оп-19.05-3180', '2оп-19.05-7200',
                   '2оп-19.05-5400', '3оп-19.05-10800',
                   '3оп-19.05-9600', '4оп-19.05-15200',
                   '4оп-19.05-12800', 'опк-25.4-5000',
                   'оп-25.4-6000', '2оп-25.4-11340',
                   '3оп-25.4-17010', 'опк-31.75-7000',
                   'оп-31.75-8850', '2оп-31.75-17700',
                   '3оп-31.75-26500', 'опк-38.1-10000',
                   'оп-38.1-12700', '2оп-38.1-25400',
                   '3оп-38.1-38100', 'опк-44.45-13000',
                   'оп-44.45-17240', '2оп-44.45-34400',
                   '3оп-44.45-65040', 'опк-50.8-16000',
                   'оп-50.8-22680', '2оп-50.8-45300',
                   '3оп-50.8-65040');
                { лЮЯЯХБ ОЮПЮЛЕРПНБ ГСАВЮРНИ ЖЕОХ     }
     Const PstZ : array [1..25,1..4] of real =
       (( 12.7,  26,  22.5,  1.01 ),
        ( 12.7,  31,  28.5,  1.6  ),
        ( 12.7,  36,  34.5,  2.0  ),
        ( 12.7,  42,  40.5,  2.31 ),
        ( 12.7,  49,  46.5,  2.7  ),
        ( 12.7,  56,  52.5,  3.0  ),
        ( 15.875, 41, 30,    2.21 ),
        ( 15.875, 50, 38,    2.71 ),
        ( 15.875, 58, 46,    3.30 ),
        ( 15.875, 69, 54,    3.90 ),
        ( 15.875, 80, 62,    4.41 ),
        ( 15.875, 91, 70,    5.0  ),
        ( 19.05,  74, 45,    3.9  ),
        ( 19.05,  89, 54,    4.9  ),
        ( 19.05, 105, 69,    5.91 ),
        ( 19.05, 124, 81,    7.0  ),
        ( 19.05, 143, 93,    8.0  ),
        ( 25.4,  101, 57,    8.4  ),
        ( 25.4,  132, 75,   10.8  ),
        ( 25.4,  164, 93,   13.2  ),
        ( 25.4,  196, 111,  15.4  ),
        ( 31.75, 166,  75,  14.35 ),
        ( 31.75, 206,  93,  16.55 ),
        ( 31.75, 246, 111,  18.8  ),
        ( 31.75, 286, 129,  21.0  ));
            {     лЮЯЯХБ НАНГМЮВЕМХИ ГСАВЮРШУ ЖЕОЕИ    }
            Const
        TipZc : array [1..25] of string [21] =
           ( 'ог-1-12.7-26-22.5',
             'ог-1-12.7-31-28.5',
             'ог-1-12.7-36-34.5',
             'ог-1-12.7-42-40.5',
             'ог-1-12.7-49-46.5',
             'ог-1-12.7-56-52.5',
             'ог-1-15.875-41-30',
             'ог-1-15.875-50-38',
             'ог-1-15.875-58-46',
             'ог-1-15.875-69-54',
             'ог-1-15.875-80-62',
             'ог-1-15.875-91-70',
             'ог-1-19.05-74-45',
             'ог-1-19.05-89-57',
             'ог-1-19.05-105-69',
             'ог-1-19.05-124-81',
             'ог-1-19.05-143-93',
             'ог-2-25.4-101-54',
             'ог-2-25.4-132-75',
             'ог-2-25.4-164-93',
             'ог-2-25.4-196-111',
             'ог-2-31.75-166-75',
             'ог-2-31.75-206-93',
             'ог-2-31.75-246-111',
             'ог-2-31.75-286-129');
             {  лЮЯЯХБ ЯРЮМДЮПРМШУ ГМЮВЕМХИ ПЮГБНДНБ ПЕГЖНБ   }
   Const
    TArrayW : TArray = (0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.3, 1.4, 1.6,
                        1.8, 2.0, 2.2, 2.6, 2.8, 3.2,3.6, 4.0, 4.5, 5.2,
                        6.0, 6.5, 7, 8, 9, 10, 12, 13, 14, 16, 18, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );
   CONST
           { лЮЯЯХБ ГМЮВЕМХИ ПЮГБНДНБ ПЕГЖНБ ПЕГЖНБНИ ЦНКНБЙХ }
    TARRAYW2 : ARRAY[1..25,1..8] OF REAL =
          ((1.5,  0,  1,   0.010, 0,    0,   0,    0  ),
           (1.75, 0,  1.1, 0.077, 0,    0,   0,    0  ),
           (2.0,  0,  1.3, 0.030, 0.04, 1.4, 0.14, 1.6 ),
           (2.25, 0,  1.4, 0.119, 0.05, 1.6, 0.14, 1.8 ),
           (2.5,  0,  1.6, 0.072, 0.06, 1.8, 0.14, 2.0 ),
           (2.75, 0,  1.8, 0.024, 0.07, 2.0, 0.14, 2.2 ),
           (3.0,  0,  2.0, 0.024, 0.07, 2.2, 0.2,  2.6 ),
           (3.5,  0,  2.2, 0.155, 0.08, 2.6, 0.14, 2.8 ),
           (4.0,  0,  2.6, 0.060, 0.04, 2.8, 0.14, 3.2 ),
           (4.5,  0,  2.8, 0.239, 0.05, 3.2, 0.14, 3.6 ),
           (5.0,  0,  3.2, 0.143, 0.06, 3.6, 0.14, 4.0 ),
           (5.5,  0,  3.6, 0.048, 0.07, 4.0, 0.18, 4.6 ),
           (6.0,  0,  4.0, 0.047, 0.10, 4.6, 0.20, 5.2 ),
           (7.0,  0,  4.6, 0.036, 0.08, 5.2, 0.20, 6.0 ),
           (8.0,  0,  5.2, 0.120, 0.09, 6.0, 0.15, 6.5 ),
           (9.0,  0,  6.0, -0.071, 0.06, 6.5, 0.12, 7. ),
           (10,   0,  6.5, 0.150, 0.04, 7.0, 0.14, 8.0 ),
           (11,   0,  7,   0.371, 0.07, 8.0, 0.16, 9.0 ),
           (12,   0,  8,  -0.095, 0.09, 9.0, 0.17, 10. ),
           (14,   0,  9,   0.347, 0.05, 10., 0.20, 12. ),
           (16,   0, 10,   0.789, 0.09, 12., 0.15, 13. ),
           (18,   0, 12,  -0.143, 0.06, 13., 0.12, 14. ),
           (20,   0, 12,   0.299, 0.04, 14., 0.14, 16. ),
           (22,   0, 14,   0.741, 0.07, 16., 0.16, 18. ),
           (25,   0, 16,   0.718, 0.06, 18., 0.14, 20));
                   {--------------------------}
        {  лЮЯЯХБ ГМЮВЕМХИ ДХЮЛЕРПНБ ПЕГЖНБНИ ЦКДНБЙХ ДКЪ 1-И ТНПЛШ ГСАЮ}
        Const
      TArray01 : Array [1..16,1..8] OF REAL =
           ((  88.9,  40,  55,  8,  10,  20,  2.,   3. ),
            ( 100.,   45,  65,  9,  10,  20,  2.,   3. ),
            ( 125,    55,  75, 10,  12,  25,  2.,   3.5 ),
            ( 152.4,  70,  90, 10,  15,  30,  2.5,  3.5 ),
            ( 160,    72,  95, 12,  16,  32,  2.5,  4   ),
            ( 190.5,  85, 115, 15,  20,  40,  2.5,  5  ),
            ( 200,    90, 120, 15,  20,  40,  2.5,  5  ),
            ( 228.6, 100, 135, 15,  20,  40,  2.5,  5  ),
            ( 250,   110, 150, 18,  25,  50,  2.5,  6  ),
            ( 315,   140, 190, 24,  32,  65,  2.5,  9  ),
            ( 400,   180, 240, 30,  40,  80,  3.,  10  ),
            ( 457.2, 200, 280, 28,  50, 100,  4.,  10  ),
            ( 500,   225, 300, 36,  50, 100,  4.,  12  ),
            ( 630,   290, 380, 45,  70, 125,  4,   16  ),
            ( 800,   360, 480, 60,  80, 160,  5,   20  ),
            (1000,   450, 600, 70, 100, 200,  6,   25  ));
         Const
      TArrayD01: TArray  =  ( 88.9, 100, 125, 152.4, 160,
                             190.5, 200, 228.6, 250, 315,
                               400, 457.2, 500, 630, 800,1000,
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                                 0, 0, 0, 0);
                {-----------------------------------}
   { лЮЯЯХБ ГМЮВЕМХИ ДХЮЛЕРПНБ ПЕГЖНБНИ ЦНКНБЙХ ДКЪ 2-И ТНПЛШ ГСАЮ }
       Const
      TArray02 : Array [1..18,1..8] OF REAL =
           ((  60,   18,  42,   7,   5,  15,  0.6,  2.  ),
            (  80,   24,  56,   8,   6,  20,  1,    2.5 ),
            (  88.9, 25,  60,   8,   8,  20,  1,    2.5 ),
            ( 100,   30,  70,   9,   8,  25,  1,    3.  ),
            ( 125,   40,  90,  10,  10,  30,  1,    3.5 ),
            ( 152.4, 45, 105,  10,  12,  30,  1.5,  3.5 ),
            ( 160,   50, 110,  12,  12,  40,  1.5,  4   ),
            ( 190.5, 60, 135,  15,  15,  40,  2,    5   ),
            ( 200,   60, 140,  15,  16,  50,  2,    5   ),
            ( 228.6, 70, 160,  15,  18,  60,  2,    6   ),
            ( 250,   75, 175,  18,  20,  65,  2,    6   ),
            ( 315,   95, 220,  24,  25,  80,  3,    8   ),
            ( 400,  120, 280,  30,  32, 100,  3,   10   ),
            ( 457.2,140, 320,  28,  36, 120,  4,   10   ),
            ( 500,  150, 350,  36,  40, 125,  4,   12   ),
            ( 630,  190, 440,  45,  50, 160,  5,   16   ),
            ( 800,  240, 560,  60,  65, 200,  6,   20   ),
            (1000,  300, 65,   70,  80, 250,  8,   25   ));
       Const
     TArrayD02 :TArray  = ( 60, 80,88.9, 100, 125, 152.4,
                           160, 190.5, 200, 228.6, 250, 315,
                           400, 457.2, 500, 630, 800,1000,
                             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                             0, 0 );
                  {------------------------------}
       {   лЮЯЯХБ ЙНЩТТХЖХЕМРНБ ЯЛЕЫЕМХЪ ДКЪ ЙПСЦНБШУ ГСАЭЕБ   }
       Const
       TArrayXn : Array [1..13,1..13] OF REAL =
  (( 9, 0, 0,   0,   0,   0,   0,   0,   0, 0.46, 0.49, 0.50, 0.52),
  (10, 0, 0,   0,   0,   0,   0,   0,   0, 0.44, 0.47, 0.45, 0.48),
  (11, 0, 0,   0,   0,   0,   0,   0,   0.38, 0.41, 0.44, 0.45, 0.46),
  (12, 0, 0,   0,   0,   0,   0,   0.32, 0.37, 0.39, 0.41, 0.42, 0.43),
  (13, 0, 0,   0,   0,   0,   0.27, 0.30, 0.36, 0.37, 0.39, 0.40, 0.41),
  (14, 0, 0,   0,   0.18, 0.23, 0.26, 0.29, 0.33, 0.35, 0.37, 0.38,0.38),
  (15, 0, 0,   0.12, 0.17, 0.22, 0.25, 0.27, 0.31, 0.33, 0.35, 0.36, 0.37),
  (16, 0, 0.06, 0.11, 0.16, 0.21, 0.24, 0.26, 0.30, 0.32, 0.34, 0.35, 0.35),
  (18, 0, 0.05, 0.10, 0.15, 0.19, 0.22, 0.24, 0.27, 0.30, 0.32, 0.32, 0.33),
  (20, 0, 0.05, 0.09, 0.13, 0.17, 0.20, 0.22, 0.26, 0.28, 0.29, 0.29, 0.30),
  (25, 0, 0.04, 0.08, 0.11, 0.15, 0.17, 0.19, 0.21, 0.24, 0.25, 0.25, 0.26),
  (30, 0, 0.03, 0.07, 0.09, 0.11, 0.15, 0.16, 0.18, 0.21, 0.22, 0.22, 0.25),
  (40, 0, 0.03, 0.05, 0.07, 0.09, 0.11, 0.11, 0.14, 0.16, 0.17, 0.17, 0.18));
                   {-----------------------------}
        Const
       MatCH1 : Array [1..13] OF String[50]  =
  ('1. 40X HRC 48 - 58',
   '2. 40XH HRC 48 - 58',
   '3. 25XM HRC 48 - 58 ',
   '4. 35XMA HRC 48 - 58',
   '5. 35X CA HRC 48 - 55 ',
   '6. 15X HRC 56 - 63 ',
   '7. 20X HRC 57 - 63',
   '8. 12XH3A HRC 57 - 63',
   '9. 20XH3A HRC 57 - 63',
   '10: 18X T HRC 57 -63',
   '11. 45 HB 190 - 220',
   '12. 50 HB 256 - 290',
   '13. 35XH HB 220 - 260');
                   {----------------------------}
          Const
       MatCH2 : Array [1..25] OF String [50] =
   (' лЮРЕПХЮК       CkopocРЭ ckoКЭФЕМХЪ   KHE . об ',
    '1.                25 > Vs > 8          < 0.2',
    '                  8  > Vs > 3          > 0.2',
    '                  4  > Vs > 3          > 0.4',
    '2.                15 > Vs > 8          < 0.2',
    '                   8 > Vs > 4          > 0.2',
    '                   4 > Vs > 3          > 0.4',
    '3.                 8 . Vs > 4        0.2 - 0.1',
    '                   4 > Vs > 3        0.4 - 0.2',
    '                   3 > Vs > 2           > 0.4',
    '4.                 4 > VS > 3        0.2 - 0.1',
    '                   3 > VS > 2        0.4 - 0.2',
    '                       Vs < 2           > 0.4',
    '5.                 4 > Vs > 3        0.2 - 0.1',
    '                   3 > Vs > 2        0.4 - 0.2',
    '                       Vs < 2           > 0.4',
    '6.                 4 > Vs > 3        0.2 - 0.1',
    '                   3 > Vs > 2        0.4 - 0.2',
    '                       Vs < 2           > 0.4',
    '7.                 4 > Vs > 3        0.2 - 0.1',
    '                   3 > Vs > 2        0.4 - 0.2',
    '                       Vs < 2           > 0.4  ',
    '8.                 3 > Vs > 2            < 0.1  ',
    '                   1 < Vs < 2            < 0.2  ',
    '                       Vs < 1            < 0.2  ');
           {-------------------------------------------}
             { ЛЮЯЯХБ ЯРЮМДЮПРМШУ ЛНДСКЕИ  }
    Const
    TArrayZM : Tarray  = (1.0,1.25,1.375,1.5,1.75,2.0,2.25,2.5,2.75,3.0,
                          3.5,4.0,4.5,5.0,5.5,6.0,7.0,8.0,9.0,10,11,12,
                          14,16,18,20,22,25,28,32,36,40,45,50,55,60,70,
                          80,90,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);


          { лЮЯЯХБ ЯРЮМДЮПРМШУ ГМЮВЕХИ ЛЕФНЯЕБНЦН ПЮЯЯРНЪМХЪ }
    Const
    TArrayZAw : Tarray  = (40,50,63,80,100,125,140,160,180,200,225,250,280,
                         315,355,400,450,500,560,630,710,800,900,1000,1120,
                         1250,1400,1600,1800,2000,2240,2500,0,0,0,0,0,0,0,
                         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                         0,0,0,0,0,0,0,0,0,0,0,0);
              { лЮЯЯХБ ГМЮВЕМХИ ДЕКХРЕКЭМНЦН ДХЮЛЕРПЮ ЙНМХВЕЯЙНЦН ЙНКЕЯЮ}
       Const
                      TArrayDe : TArray  = (50,56,63,71,80,90,100,112,
                                            125,140,160,180,200,225,250,
                                            280,315,355,400,450,500,560,
                                            630,710,800,900,1000,1120,
                                            1250,1400,1600,0,0,0,0,0,0,
                                            0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                            0,0,0,0,0,0,0,0,0,0,0,0,0,0,
                                            0,0,0,0,0,0,0,0,0,0);

    { лЮЯЯХБ ОПЕДЕКНБ ОПНВМНЯРХ Х РЕЙСВЕЯРХ ЛЮРЕПХЮКНБ ВЕПБЪВМНЦН ЙНКЕЯЮ}
       Const
 Mc2Sigma : Array [1..8,1..6] of real =((285,   0,   0, 165,   0,   0 ),
                                        (  0, 275, 230,   0, 200, 140 ),
                                        (  0, 200, 145,   0,  90,  80 ),
                                        (700, 650,   0, 460, 430,   0 ),
                                        (  0, 550, 450,   0, 360, 300 ),
                                        (530, 500, 425, 245, 230, 195 ),
                                        (500, 450, 400, 350, 295, 260 ),
                                        (  0,   0, 355,   0,   0,   0 ));

{*********опнжедспю нйпсцкемхъ дн акхфюиьецн ярюмдюпрмнцн гмювемхъ**********}
Procedure RoundGost(Ac : TArray;
                     i_min, i_max : integer;
                     Ap : extended;
                     Var A : extended;
                     Var iA : integer
                     );

{****опнжедспю нйпсцкемхъ дн акхфюиьецн анкэьецн ярюмдюпрмнцн гмювемхъ******}
PROCEDURE TruncGOST (Ac : TArray;
                     i_min, i_max : byte;
                     Ap : real;
                     Var A : real;
                     Var iA : byte
                     );
 PROCEDURE VIBOR (As1 :TArray; I_min, I_max : byte;Ar : real;
                 var A1r : real; var Id : byte);

Const
  T1S: array [1..4] of extended = (120, 300, 1500, 1000000);
Const
  T2S : array[1..3] of extended = (30, 150, 1000000);
Const
  T3S : array[1..7] of extended = (25, 50, 130, 500, 1800, 4500, 1000000);


IMPLEMENTATION
      {  оПНЖЕДСПЮ НЙПСЦКЕМХЪ ДН АКХФЮИЬЕЦН  ЯРЮМДЮПРМНЦН ГМЮВЕМХЪ }
Procedure RoundGost(Ac : TArray;
                     i_min, i_max : integer;
                     Ap : extended;
                     Var A : extended;
                     Var iA : integer
                     );


                   
    {  Ac - ЛЮЯЯХБ ДХЮЛЕРПНБ;
       i_min,i_max - МЮВЮКЭМШИ Х ЙНМЕВМШИ ЩКЕЛЕМРШ ЛЮЯЯХБЮ;
       A - НЙПСЦКЕММШИ ДХЮЛЕРП;
       iA - ЕЦН ОНПЪДЙНБШИ МНЛЕП;
       Ap - ДХЮЛЕРП ДН НЙПСЦКЕМХЪ;   }

  Label 1;
  Var i : integer;
Begin
  For i := i_min to i_max do
      begin
        if Ac[i] >= Ap then
                         begin
                          if (Ap - Ac[i - 1]) > (Ac[i]  - Ap)
                             then
                               begin
                                 A := Ac [i];
                                 iA := i
                                end
                             else
                               begin
                                 A := Ac [i - 1];
                                 iA := i - 1
                                end;
                           goto 1;
                      end;
        if i=i_max then
                       begin
                          A:=Ac[i_max];
                          iA:=i_max;
                          goto 1;
                        end;
      end;
1:End;

{  оПНЖЕДСПЮ НЙПСЦКЕМХЪ ДН АКХФЮИЬЕЦН АНКЭЬЕЦН ЯРЮМДЮПРМНЦН ГМЮВЕМХЪ }
PROCEDURE TruncGOST (Ac : TArray;
                     i_min, i_max : byte;
                     Ap : real;
                     Var A : real;
                     Var iA : byte
                     );
    {  Ac - ЛЮЯЯХБ ДХЮЛЕРПНБ;
       i_min,i_max - МЮВЮКЭМШИ Х ЙНМЕВМШИ ЩКЕЛЕМРШ ЛЮЯЯХБЮ;
       A - НЙПСЦКЕММШИ ДХЮЛЕРП;
       iA - ЕЦН ОНПЪДЙНБШИ МНЛЕП;
       Ap - ДХЮЛЕРП ДН НЙПСЦКЕМХЪ;   }

  Label 1;
  Var i : integer;
Begin
{ мЮВЮКН ОПНЖЕДСПШ TRUNCGOST }
  For i := i_min to i_max  do
      begin
        if Ac[i]>=Ap then
                      begin
                         A:=Ac[i];
                         iA:=i ;
                         goto 1;
                       end;
        if i=i_max then
                       begin
                          A:=Ac[i_max];
                          iA:=i_max;
                          goto 1;
                        end;
      end;
1:End;
                       {-----------------------------}
            {   оПНЖЕДСПЮ БШАНПЮ АКХФЮИЬЕЦН ХГ ЯРЮМДЮПРМНЦН ПЪДЮ  }
      PROCEDURE VIBOR (As1: TArray; i_min, i_max : byte;
                        Ar : real; var A1r : real; var Id : byte);
             Var del, del1 : real;
                 A0, I1 : byte;
             Begin
                 del := Abs(Ar - As1[1]);
                 Id := i_min;
                 A0 := 0;
               For I1 := 2 to i_max DO begin
                  del1 := Abs( Ar - As1[I1]);
                  If del < del1 then begin
                     A1r:= As1[Id];
                     A0:= A0 +1;
                                     end
                  else begin
                    del := del1;
                    id := I1;
                       end;
                                      end;
             END;



     end.

