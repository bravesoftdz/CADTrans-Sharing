 Unit MeMODUL;
 INTERFACE
 Const
   {массив для выбора cpo}
   a1 : array [1..3,1..3] of real=
   ((1.24,        1.34,       1.54),
    (1.38,        1.5,        1.74),
    (1.52,        1.65,       1.95));

   {массив для выбора Tmax }
   a2 : array [1..6,1..8] of real=
   ((0.15,    0.35,    0.6,     18,      80,     120,    450,    500),
    (0.085,   0.27,    0.27,    5.4,     75,     100,    400,    400),
    (0.08,    0.212,   0.5,     8.5,     58,     105,    320,    320),
    (0.075,   0.15,    0.4,     11.5,    42,     100,    230,    0),
    (0.06,    0.1,     0.4,     8,       30,     115,    230,    0),
    (0.04,    0.05,    0.32,    5.8,     35,     80,     80,     0));

   {массив для выбора стандартного числа зубьев ремня}
   a3 : array [1..33,1..8] of integer=
{ m  1,       1.5,     2,       3,       4,      5,      7,      10}
   ((40,      40,      40,      40,      0,      0,      0,      0),
    (42,      42,      42,      42,      0,      0,      0,      0),
    (45,      45,      45,      45,      0,      0,      0,      0),
    (48,      48,      48,      48,      48,     48,     0,      0),
    (50,      50,      50,      50,      50,     50,     0,      0),
    (53,      53,      53,      53,      53,     53,     0,      0),
    (56,      56,      56,      56,      56,     56,     56,     56),
    (60,      60,      60,      60,      60,     60,     60,     60),
    (63,      63,      63,      63,      63,     63,     63,     63),
    (67,      67,      67,      67,      67,     67,     67,     67),
    (71,      71,      71,      71,      71,     71,     71,     71),
    (75,      75,      75,      75,      75,     75,     75,     75),
    (80,      80,      80,      80,      80,     80,     80,     80),
    (85,      85,      85,      85,      85,     85,     85,     85),
    (90,      90,      90,      90,      90,     90,     90,     90),
    (95,      95,      95,      95,      95,     95,     95,     95),
    (100,     100,     100,     100,     100,    100,    100,    100),
    (105,     105,     105,     105,     105,    105,    105,    0),
    (112,     112,     112,     112,     112,    112,    112,    0),
    (115,     115,     115,     115,     115,    115,    115,    0),
    (125,     125,     125,     125,     125,    125,    125,    0),
    (130,     130,     130,     130,     130,    130,    130,    0),
    (140,     140,     140,     140,     140,    140,    0,      0),
    (150,     150,     150,     150,     150,    150,    0,      0),
    (160,     160,     160,     160,     160,    160,    0,      0),
    (0,       0,       0,       0,       170,    170,    0,      0),
    (0,       0,       0,       0,       180,    180,    0,      0),
    (0,       0,       0,       0,       190,    190,    0,      0),
    (0,       0,       0,       0,       200,    200,    0,      0),
    (0,       0,       0,       0,       210,    0,      0,      0),
    (0,       0,       0,       0,       220,    0,      0,      0),
    (0,       0,       0,       0,       235,    0,      0,      0),
    (0,       0,       0,       0,       250,    0,      0,      0));
    {массив для выбора стандартной ширины ремня}
{***}   a4 : array [1..8,1..8] of real= {***************************8}
   ((3,       3,       5,       12.5,    20,     25,     40,     50),
    (4,       4,       8,       16,      25,     32,     50,     63),
    (5,       5,       10,      20,      32,     40,     63,     80),
    (8,       8,       12.5,    25,      40,     50,     80,     100),
    (10,      10,      16,      32,      50,     63,     100,    125),
    (12.5,    12.5,    20,      40,      63,     80,     125,    160),
    (0,       16,      0,       50,      80,     100,    0,      200),
    (0,       20,      0,       0,       100,    0,      0,      0));
   {выбоp модуля,m}
   o1 : array [1..8] of real=
   (1,        1.5,     2,       3,       4,      5,      7,      10);
   {выбоp минимального числа зубьев,Zmin}
   o2 : array [1..8] of integer=
   (10,       12,      12,      14,      18,     18,     22,     22);
   {выбоp максимального числа зубьев,Zmax}
   o3 : array [1..8] of integer=
   (100,      100,     115,     120,     120,    120,    120,    85);
   {выбоp максимальной шиpины pемня,Bmax}
   o4 : array [1..8] of real=
   (12.5,     20,      20,      50,      100,    100,    125,    200);
   {выбоp высоты зуба pемня,H}
   o5 : array [1..8] of real=
   (0.8,      1.2,     1.5,     2,       2.5,    3.5,    6,      9);
   {податливость каpкаса,LAMP}
   o6 : array [1..8] of real=
   (7E-4,     8E-4,    9E-4,    14E-4,   6E-4,   8E-4,   11E-4,  16E-4);
   {удельная масса pемня,Q}
   o7 : array [1..8] of integer=
   (10,       20,      30,      40,      60,     70,      80,    110);
   {допустимое окpужное усилие,FOD}
   o8 : array [1..8] of integer=
   (2,        3,       5,       10,      25,     35,      45,    60);
   {расстояние до нейтрального слоя,DEL}
   o9 : array [1..8] of real=
   (0.4,      0.4,     0.6,     0.6,     0.8,    0.8,     0.8,   0.8);
 {Процедура,обеспечивающая выбор модуля m}
 Procedure MODUL(K : byte;
                 T1 : real;
                 Var Im,IMM : byte;
                 var m : real);
 {Процедура,обеспечивающая выбор стандартного количества зубъев ремня}
 Procedure PLpct(Im : byte;
                 Lp : real;
                 Var Lpct : integer;
                 Var ILL : byte);
 {Процедура,обеспечивающая выбор стандартной ширины ремня}
 Procedure PBct(Im:byte;B:real;
                Var Bct:real;
                Var IBB:byte);
 IMPLEMENTATION
 Procedure MODUL;
  var I : byte;
 begin
  IMM:=0;
  For I:=1 to 8 do
  if a2[K,I] >= T1 then
    begin
     Im:=I;
     m:=o1[I];
     IMM:=1;
     Break;
    end;
 end;
 Procedure PLpct;
   var Y : byte;
    c, r : real;
 begin
 ILL := 0;
 For Y := 1 to 33 do
 if a3[Y, Im] >= Lp then
   begin
     if (a3[Y -1, Im] <> 0) then
       begin
          c := Lp - a3[Y -1 , Im];
          r := a3[Y, Im] - Lp;
          if c < r then Lpct := a3[Y - 1, Im]
                    else Lpct := a3[Y, Im];
       end
                          else Lpct := a3[Y, Im];
     ILL := 1;
     Break;
   end;
 end;

 Procedure PBct;
  var Y : byte;
   c, r : real;
 begin
 IBB := 0;
 For Y := 1 to 8 do
 if a4[Y, Im] >= B then
   begin
     c := B - a4[Y - 1, Im];
     r := a4[ Y, Im] - B;
     if c < r then Bct := a4[Y - 1, Im] else Bct := a4[Y , Im];
     IBB := 1;
     Break;
   end;
 end;
 END.






